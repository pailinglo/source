// <auto-generated />
using GroceryApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GroceryApi.Migrations
{
    [DbContext(typeof(GroceryContext))]
    [Migration("20250425202415_AddMajorIngredientsAndTrigger")]
    partial class AddMajorIngredientsAndTrigger
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GroceryApi.Models.Cuisine", b =>
                {
                    b.Property<string>("CuisineId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CuisineId");

                    b.ToTable("Cuisine");
                });

            modelBuilder.Entity("GroceryApi.Models.DishType", b =>
                {
                    b.Property<string>("DishTypeId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DishTypeId");

                    b.ToTable("DishType");
                });

            modelBuilder.Entity("GroceryApi.Models.Ingredient", b =>
                {
                    b.Property<string>("IngredientId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("GroceryApi.Models.Recipe", b =>
                {
                    b.Property<string>("RecipeId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("AggregateLikes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("CookingMinutes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("GlutenFree")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("");

                    b.Property<int>("IngredientCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<int>("MajorIngredientCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PreparationMinutes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ReadyInMinutes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Servings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("SourceUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasDefaultValue("");

                    b.Property<bool>("Vegan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("Vegetarian")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("VeryPopular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("GroceryApi.Models.RecipeCuisine", b =>
                {
                    b.Property<string>("RecipeId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CuisineId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("RecipeId", "CuisineId");

                    b.HasIndex("CuisineId");

                    b.ToTable("RecipeCuisine");
                });

            modelBuilder.Entity("GroceryApi.Models.RecipeDishType", b =>
                {
                    b.Property<string>("RecipeId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DishTypeId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("RecipeId", "DishTypeId");

                    b.HasIndex("DishTypeId");

                    b.ToTable("RecipeDishType");
                });

            modelBuilder.Entity("GroceryApi.Models.RecipeIngredient", b =>
                {
                    b.Property<string>("RecipeId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("IngredientId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m);

                    b.Property<bool>("IsMajor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("OriginalText")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("GroceryApi.Models.RecipeRecommendation", b =>
                {
                    b.Property<int>("IngredientCount")
                        .HasColumnType("int");

                    b.Property<int>("MajorIngredientCount")
                        .HasColumnType("int");

                    b.Property<int>("MatchCount")
                        .HasColumnType("int");

                    b.Property<double>("MatchPercent")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RecipeId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("GroceryApi.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(254)
                        .HasColumnType("varchar(254)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(254)
                        .HasColumnType("varchar(254)")
                        .HasDefaultValue("");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GroceryApi.Models.UserIngredient", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(254)");

                    b.Property<string>("IngredientId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("UserId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("UserIngredients");
                });

            modelBuilder.Entity("GroceryApi.Models.RecipeCuisine", b =>
                {
                    b.HasOne("GroceryApi.Models.Cuisine", "Cuisine")
                        .WithMany("RecipeCuisines")
                        .HasForeignKey("CuisineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GroceryApi.Models.Recipe", "Recipe")
                        .WithMany("RecipeCuisines")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuisine");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("GroceryApi.Models.RecipeDishType", b =>
                {
                    b.HasOne("GroceryApi.Models.DishType", "DishType")
                        .WithMany("RecipeDishTypes")
                        .HasForeignKey("DishTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GroceryApi.Models.Recipe", "Recipe")
                        .WithMany("RecipeDishTypes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DishType");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("GroceryApi.Models.RecipeIngredient", b =>
                {
                    b.HasOne("GroceryApi.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GroceryApi.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("GroceryApi.Models.UserIngredient", b =>
                {
                    b.HasOne("GroceryApi.Models.Ingredient", "Ingredient")
                        .WithMany("UserIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GroceryApi.Models.User", "User")
                        .WithMany("UserIngredients")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GroceryApi.Models.Cuisine", b =>
                {
                    b.Navigation("RecipeCuisines");
                });

            modelBuilder.Entity("GroceryApi.Models.DishType", b =>
                {
                    b.Navigation("RecipeDishTypes");
                });

            modelBuilder.Entity("GroceryApi.Models.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");

                    b.Navigation("UserIngredients");
                });

            modelBuilder.Entity("GroceryApi.Models.Recipe", b =>
                {
                    b.Navigation("RecipeCuisines");

                    b.Navigation("RecipeDishTypes");

                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("GroceryApi.Models.User", b =>
                {
                    b.Navigation("UserIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
